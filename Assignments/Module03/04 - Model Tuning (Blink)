Implement a neural network inspired by LeNet for the blink domain and tune it up! Your final
  model should have at least two convolutional layers followed by at least two fully connected layers
  a batch normalization layer, a droppout layer, and an output layer.

There is no framework code.

But here are some code snippets that might help:

 # this code will convert 2-d arrays (e.g. input images) into 1-d data for feeding to fully connected layers
 out = out.reshape(out.size(0), -1)


Hand in:

2 Points - Your updated BlinkNeuralNetwork.py file. Make sure the TA can easily find the required elements.

[ OPTIONAL we may do a Kaggle competition for this ]

6 Points - A professional description of your model tuning process. Keep it to ~5 plots and ~1500 words
    of text. Remember cross-validation, bias / variance, roc curves, & generalization error.